{% extends "stampo.htm" %}
{% block title %}{{ gettext("Menu ") }} {{ menu.mid }}{% endblock %}
{% block extrahead %}
    <script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"
            integrity="sha256-yr4fRk/GU1ehYJPAs8P4JlTgu0Hdsp4ZKrx8bDEDC3I=" crossorigin="anonymous"></script>
    <script>
        var socket = io();
        $(document).ready(function () {
            $('.modal').modal();
        });
        $(document).ready(function () {
            $('select').formSelect();
        });
        $(document).ready(function () {
            $('.collapsible').collapsible();
        });

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        function loadData(cid, mid) {
            console.log("Sent request by subordinate of " + cid)
            let xhr = new XMLHttpRequest();
            refDiv = document.getElementById("c" + cid)
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        refDiv.innerHTML = ""
                        response = xhr.responseText
                        response = JSON.parse(response)
                        categories = response["response"]["categories"]
                        dishes = response["response"]["dishes"]
                        console.log(dishes)
                        console.log(categories)
                        // Panel setup
                        var column = refDiv;
                        // Modals
                        var catModalDiv = document.createElement("div");
                        catModalDiv.setAttribute("id", cid + "LevelModal");
                        catModalDiv.setAttribute("class", "modal");
                        column.appendChild(catModalDiv);
                        var catModalContentDiv = document.createElement("div");
                        catModalContentDiv.setAttribute("class", "modal-content")
                        catModalDiv.appendChild(catModalContentDiv);
                        var catModalGuide = document.createElement("h4")
                        catModalGuide.textContent = "Add a category";
                        catModalContentDiv.appendChild(catModalGuide);
                        var catModalName = document.createElement("input")
                        catModalName.setAttribute("id", cid + "LevelCatName");
                        catModalName.setAttribute("name", "topLevelCatName");
                        catModalContentDiv.appendChild(catModalName);
                        var catModalLabel = document.createElement("label")
                        catModalLabel.setAttribute("for", cid + "LevelCatName");
                        catModalLabel.textContent = "Category Name";
                        catModalContentDiv.appendChild(catModalLabel);
                        var catModalFooter = document.createElement("div");
                        catModalFooter.setAttribute("class", "modal-footer");
                        catModalDiv.appendChild(catModalFooter);
                        var catButton = document.createElement("button");
                        catButton.setAttribute("class", "modal-close waves-effect waves-green btn-flat")
                        catButton.setAttribute("onclick", "addCat(" + cid + "," + mid + ")")
                        catButton.textContent = "Save"
                        catModalFooter.appendChild(catButton);

                        var dishModalDiv = document.createElement("div");
                        dishModalDiv.setAttribute("id", cid + "LevelDish");
                        dishModalDiv.setAttribute("class", "modal");
                        column.appendChild(dishModalDiv);
                        var dishModalContentDiv = document.createElement("div");
                        dishModalContentDiv.setAttribute("class", "modal-content")
                        dishModalDiv.appendChild(dishModalContentDiv);
                        var dishModalGuide = document.createElement("h4")
                        dishModalGuide.textContent = "Add a dish";
                        dishModalContentDiv.appendChild(dishModalGuide);
                        var dishModalSelect = document.createElement("div")
                        dishModalSelect.setAttribute("id", cid + "PlateSelect");
                        dishModalContentDiv.appendChild(dishModalSelect);
                        var dishModalLabel = document.createElement("label")
                        dishModalLabel.setAttribute("for", cid + "PlateSelect");
                        dishModalLabel.textContent = "Choose a dish...";
                        dishModalContentDiv.appendChild(dishModalLabel);
                        var dishModalFooter = document.createElement("div");
                        dishModalFooter.setAttribute("class", "modal-footer");
                        dishModalDiv.appendChild(dishModalFooter);
                        var dishButton = document.createElement("button");
                        dishButton.setAttribute("class", "modal-close waves-effect waves-green btn-flat")
                        dishButton.setAttribute("onclick", "addDish(" + cid + "," + mid + ")")
                        dishButton.textContent = "Save"
                        dishModalFooter.appendChild(dishButton);
                        $('.modal').modal();
                        // Main content setup
                        var catMasterUl = document.createElement("ul");
                        catMasterUl.setAttribute("class", "collapsible");
                        catMasterUl.setAttribute("id", "l" + cid);
                        catMasterUl.setAttribute("data-collapsible", "accordion");
                        column.appendChild(catMasterUl);
                        // Categories
                        for (const cat of categories) {
                            var catLi = document.createElement("li");
                            catLi.setAttribute("id", "l" + cat['cid']);
                            catMasterUl.appendChild(catLi);
                            var collapseHeader = document.createElement("div");
                            collapseHeader.setAttribute("class", "collapsible-header");
                            collapseHeader.setAttribute("onclick", "loadData(" + cat['cid'] + "," + mid + ")")
                            collapseHeader.textContent = cat['name']
                            catLi.appendChild(collapseHeader)
                            var collapseBody = document.createElement("div")
                            collapseBody.setAttribute("id", "c" + cat['cid'])
                            collapseBody.setAttribute("class", "collapsible-body")
                            collapseBody.style = "padding-top: 1rem; padding-bottom: 1rem; padding-left: 5px; padding-right: 5px";
                            catLi.appendChild(collapseBody)
                            $('.collapsible').collapsible();
                        }
                        var dishMasterUl = document.createElement("ul");
                        dishMasterUl.setAttribute("class", "collection");
                        dishMasterUl.setAttribute("id", "p" + cid);
                        column.appendChild(dishMasterUl);
                        for (const dish of dishes) {
                            var dishLi = document.createElement("li");
                            dishLi.setAttribute("id", "l" + dish['pid'])
                            dishLi.className = "collection-item avatar"
                            dishMasterUl.appendChild(dishLi);
                            var dishName = document.createElement("span")
                            dishName.textContent = dish['name'];
                            dishName.className = "title";
                            dishLi.appendChild(dishName);
                            var dishDesc = document.createElement("p");
                            dishDesc.textContent = dish['description'] + ", " + dish['ingredients'] + ". " + dish['cost'] + "â‚¬";
                            dishLi.appendChild(dishDesc);
                            var linkDiv = document.createElement("div");
                            dishLi.appendChild(linkDiv);
                            var addLink = document.createElement("a");
                            addLink.href = "#";
                            addLink.setAttribute("onclick", 'add(' + dish['pid'] + ',' + '\'' + dish['name'] + '\'' + ')');
                            addLink.textContent = "Add";
                            linkDiv.appendChild(addLink);
                            var remLink = document.createElement("a");
                            remLink.href = "#";
                            remLink.setAttribute("onclick", 'remove(' + dish['pid'] + ')');
                            remLink.textContent = " Remove";
                            linkDiv.appendChild(remLink);
                        }

                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/menu/" + {{menu.mid}}+"/category/" + cid + "/getComponents", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.send()
        }

        var orders = {'-1': -1};

        function add(pid, name) {
            if (orders[pid]) {
                orders[pid]['qty'] += 1;
                console.log(orders[pid])
            } else {
                orders[pid] = {}
                orders[pid]['qty'] = 1;
                orders[pid]['name'] = name
            }
            updater();
        }

        function remove(pid) {
            if (orders[pid]) {
                orders[pid]['qty'] -= 1;
                console.log(orders[pid])
                if (orders[pid]['qty'] <= 0) {
                    delete orders[pid]
                }
            }
            updater();
        }

        function updater() {
            refDiv = document.getElementById('orders');
            refDiv.innerHTML = ""
            masterUl = document.createElement('ul')
            masterUl.className = "collection";
            refDiv.appendChild(masterUl);
            Object.entries(orders).forEach(([key, value]) => {
                if (key >= 0) {
                    li = document.createElement("li");
                    li.className = "collection-item";
                    li.textContent = value['name'] + " x" + value['qty'];
                    masterUl.appendChild(li);
                }
            });
        }



        function submitOrder() {
            console.log('ping1')
            button = document.getElementById("subButton");
            button.setAttribute("onclick", "return false;")
            socket.emit('newOrder', {json: orders})
            sleep(1000);
            window.location='{{url_for('page_orders_dashboard', rid=rid)}}';
        }

    </script>
{% endblock %}
{% block content %}
    <h5>{{ gettext("You are inspecting 1 ") }}"{{ menu.name }}"</h5>
    <a href="/restaurant/{{ rid }}/orderManager" class="btn waves-effect waves-light" type="submit"
       name="action">{{ gettext("Return to your dashboard") }} <i class="material-icons right">exit_to_app</i></a>
    <a href="#" class="btn waves-effect waves-light" type="submit" onclick="submitOrder()"
       name="action" id="subButton">{{ gettext("Send the order") }} <i class="material-icons right">send</i></a>
    <div id="error"></div>
    <div class="row">
        <div class="col s12 m8">
            <ul class="collapsible" id="l0" data-collapsible="accordion">
                {% for cat in menu.topLevelCategories %}
                    <li>
                        <div class="collapsible-header"
                             onclick="loadData({{ cat.cid }}, {{ menu.mid }})">{{ cat.name }}</div>
                        <div class="collapsible-body" id="c{{ cat.cid }}"
                             style="padding-top: 1rem; padding-bottom: 1rem; padding-left: 5px; padding-right: 5px"></div>
                    </li>
                {% endfor %}
            </ul>
            <!-- Modals Structure -->
            <div id="topLevelModal" class="modal">
                <div class="modal-content">
                    <h4>Add a category</h4>
                    <input id="topLevelCatName" name="topLevelCatName">
                    <label for="topLevelCatName">Category Name</label>
                </div>
                <div class="modal-footer">
                    <button class="modal-close waves-effect waves-green btn-flat" onclick="addCat(0, {{ menu.mid }})">
                        Add
                    </button>
                </div>
            </div>
        </div>
        <div class="col s12 m4" id="orders">
        </div>
    </div>
{% endblock %}
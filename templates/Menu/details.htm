{% extends "stampo.htm" %}
{% block title %}{{ gettext("Menu details") }}{% endblock %}
{% block extrahead %}
    <script>
        $(document).ready(function () {
            $('.modal').modal();
        });
        $(document).ready(function () {
            $('select').formSelect();
        });
        $(document).ready(function () {
            $('.collapsible').collapsible();
        });

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }

        async function addDish(cid, mid) {
            let xhr = new XMLHttpRequest();
            await sleep(1000)
            refUl = document.getElementById("l" + cid)
            console.log("l" + cid)
            input = document.getElementById(cid + "LevelDishName")
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        loadData(cid, mid)
                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/restaurant/{{ rid }}/menu/" + mid + "/dish/add/" + cid, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "plateId=" + input.value;
            xhr.send(parametri)
        }

        async function addCat(cid, mid) {
            let xhr = new XMLHttpRequest();
            await sleep(1000)
            refUl = document.getElementById("l" + cid)
            console.log("l" + cid)
            if (cid === 0) {
                input = document.getElementById("topLevelCatName")
            } else {
                input = document.getElementById(cid + "LevelCatName")
            }
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        if (cid === 0) {
                            location.reload()
                        } else {
                            loadData(cid, mid)
                        }
                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/restaurant/{{ rid }}/menu/" + mid + "/category/add/" + cid, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "name=" + input.value;
            xhr.send(parametri)
        }

        async function addDish(cid, mid) {
            let xhr = new XMLHttpRequest();
            await sleep(1000)
            console.log("ps" + cid)
            input = document.getElementById("ps" + cid)
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        loadData(cid, mid)
                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/restaurant/{{ rid }}/menu/" + mid + "/dish/add/" + cid, true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "pid=" + input.value;
            xhr.send(parametri)
        }


        function getDishes(cid) {
            $('.collapsible').collapsible();
            console.log("Sent request by plate explorer number " + cid)
            let xhr = new XMLHttpRequest();
            var refDiv = document.getElementById(cid + "PlateSelect")
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        refDiv.innerHTML = ""
                        response = JSON.parse(xhr.responseText);
                        var select = document.createElement("select");
                        select.className = "browser-default";
                        select.name = "ps" + cid;
                        select.id = "ps" + cid;
                        refDiv.appendChild(select);
                        for (const dish of response['response']) {
                            var option = document.createElement("option");
                            option.value = dish['pid'];
                            option.textContent = dish['name'];
                            select.appendChild(option);
                        }
                        var elems = document.querySelectorAll('select');
                        var instances = M.FormSelect.init(elems, "");
                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/restaurant/"+{{ rid }}+
            "/dish/get", true
        )
            ;
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            parametri = "cid=" + cid
            xhr.send(parametri)
        }

        function deleteDish(pid, cid){
            let xhr = new XMLHttpRequest();
            var refLi = document.getElementById("pl"+pid)
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        refLi.remove()
                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/restaurant/"+{{ rid }}+"/category/"+cid+"/plate/"+pid+"/remove", true)
            xhr.send()
        }


        function loadData(cid, mid) {

            console.log("Sent request by subordinate of " + cid)
            let xhr = new XMLHttpRequest();
            refDiv = document.getElementById("c" + cid)
            errBox = document.getElementById("error")
            errBox.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        refDiv.innerHTML = ""
                        response = xhr.responseText
                        response = JSON.parse(response)
                        categories = response["response"]["categories"]
                        dishes = response["response"]["dishes"]
                        console.log(dishes)
                        console.log(categories)
                        // Panel setup
                        var row = document.createElement("div");
                        row.setAttribute("class", "row")
                        refDiv.appendChild(row)
                        var column = document.createElement("div");
                        column.setAttribute("class", "col s12 m12");
                        row.appendChild(column)
                        var addcatButton = document.createElement("a");
                        addcatButton.setAttribute("class", "waves-effect waves-light btn modal-trigger")
                        addcatButton.setAttribute("href", "#" + cid + "LevelModal")
                        addcatButton.text = "Add a category";
                        column.appendChild(addcatButton)
                        var addDishButton = document.createElement("a");
                        addDishButton.setAttribute("class", "waves-effect waves-light btn modal-trigger")
                        addDishButton.setAttribute("href", "#" + cid + "LevelDish")
                        addDishButton.setAttribute("onclick", "getDishes(" + cid + ")")
                        addDishButton.text = "Add a dish";
                        column.appendChild(addDishButton);
                        // Modals
                        var catModalDiv = document.createElement("div");
                        catModalDiv.setAttribute("id", cid + "LevelModal");
                        catModalDiv.setAttribute("class", "modal");
                        column.appendChild(catModalDiv);
                        var catModalContentDiv = document.createElement("div");
                        catModalContentDiv.setAttribute("class", "modal-content")
                        catModalDiv.appendChild(catModalContentDiv);
                        var catModalGuide = document.createElement("h4")
                        catModalGuide.textContent = "Add a category";
                        catModalContentDiv.appendChild(catModalGuide);
                        var catModalName = document.createElement("input")
                        catModalName.setAttribute("id", cid + "LevelCatName");
                        catModalName.setAttribute("name", "topLevelCatName");
                        catModalContentDiv.appendChild(catModalName);
                        var catModalLabel = document.createElement("label")
                        catModalLabel.setAttribute("for", cid + "LevelCatName");
                        catModalLabel.textContent = "Category Name";
                        catModalContentDiv.appendChild(catModalLabel);
                        var catModalFooter = document.createElement("div");
                        catModalFooter.setAttribute("class", "modal-footer");
                        catModalDiv.appendChild(catModalFooter);
                        var catButton = document.createElement("button");
                        catButton.setAttribute("class", "modal-close waves-effect waves-green btn-flat")
                        catButton.setAttribute("onclick", "addCat(" + cid + "," + mid + ")")
                        catButton.textContent = "Save"
                        catModalFooter.appendChild(catButton);

                        var dishModalDiv = document.createElement("div");
                        dishModalDiv.setAttribute("id", cid + "LevelDish");
                        dishModalDiv.setAttribute("class", "modal");
                        column.appendChild(dishModalDiv);
                        var dishModalContentDiv = document.createElement("div");
                        dishModalContentDiv.setAttribute("class", "modal-content")
                        dishModalDiv.appendChild(dishModalContentDiv);
                        var dishModalGuide = document.createElement("h4")
                        dishModalGuide.textContent = "Add a dish";
                        dishModalContentDiv.appendChild(dishModalGuide);
                        var dishModalSelect = document.createElement("div")
                        dishModalSelect.setAttribute("id", cid + "PlateSelect");
                        dishModalContentDiv.appendChild(dishModalSelect);
                        var dishModalLabel = document.createElement("label")
                        dishModalLabel.setAttribute("for", cid + "PlateSelect");
                        dishModalLabel.textContent = "Choose a dish...";
                        dishModalContentDiv.appendChild(dishModalLabel);
                        var dishModalFooter = document.createElement("div");
                        dishModalFooter.setAttribute("class", "modal-footer");
                        dishModalDiv.appendChild(dishModalFooter);
                        var dishButton = document.createElement("button");
                        dishButton.setAttribute("class", "modal-close waves-effect waves-green btn-flat")
                        dishButton.setAttribute("onclick", "addDish(" + cid + "," + mid + ")")
                        dishButton.textContent = "Save"
                        dishModalFooter.appendChild(dishButton);
                        $('.modal').modal();
                        // Main content setup
                        var catMasterUl = document.createElement("ul");
                        catMasterUl.setAttribute("class", "collapsible");
                        catMasterUl.setAttribute("id", "l" + cid);
                        catMasterUl.setAttribute("data-collapsible", "accordion");
                        column.appendChild(catMasterUl);
                        // Categories
                        for (const cat of categories) {
                            var catLi = document.createElement("li");
                            catLi.setAttribute("id", "l" + cat['cid']);
                            catMasterUl.appendChild(catLi);
                            var collapseHeader = document.createElement("div");
                            collapseHeader.setAttribute("class", "collapsible-header");
                            collapseHeader.setAttribute("onclick", "loadData(" + cat['cid'] + "," + mid + ")")
                            collapseHeader.textContent = cat['name']
                            catLi.appendChild(collapseHeader)
                            var collapseBody = document.createElement("div")
                            collapseBody.setAttribute("id", "c" + cat['cid'])
                            collapseBody.setAttribute("class", "collapsible-body")
                            catLi.appendChild(collapseBody)
                            $('.collapsible').collapsible();
                        }
                        var dishMasterUl = document.createElement("ul");
                        dishMasterUl.setAttribute("class", "collection");
                        dishMasterUl.setAttribute("id", "p" + cid);
                        column.appendChild(dishMasterUl);
                        for (const dish of dishes) {
                            var dishLi = document.createElement("li");
                            dishLi.setAttribute("id", "pl" + dish['pid'])
                            dishLi.className = "collection-item avatar"
                            dishMasterUl.appendChild(dishLi);
                            var deleteLink = document.createElement("a");
                            deleteLink.href="#";
                            deleteLink.className = "secondary-content";
                            deleteLink.text="X";
                            deleteLink.setAttribute("onclick", "deleteDish(" + dish['pid'] + "," + cid + ")");
                            dishLi.appendChild(deleteLink);
                            if (dish['link']) {
                                var image = document.createElement("img");
                                image.className = "circle";
                                image.src = dish['link'];
                                dishLi.appendChild(image);
                            }
                            var dishName = document.createElement("span")
                            dishName.textContent = dish['name'];
                            dishName.className = "title";
                            dishLi.appendChild(dishName);
                            var dishDesc = document.createElement("p");
                            dishDesc.textContent = dish['description'] + ", " + dish['ingredients'] + ". " + dish['cost'] + "€";
                            dishLi.appendChild(dishDesc);
                        }

                    } else {
                        errBox.innerHTML = xhr.statusText
                    }
                }
            });
            xhr.open("POST", "/menu/" + {{menu.mid}}+"/category/" + cid + "/getComponents", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            xhr.send()
        }
    </script>
{% endblock %}
{% block content %}
    <h5>{{ gettext("You are currently editing the menu ") }}"{{ menu.name }}"</h5>
    <a class="waves-effect waves-light btn modal-trigger" href="#topLevelModal">Add a top-level category</a>
    <a href="/restaurant/{{ rid }}/management#menus" class="btn waves-effect waves-light" type="submit"
       name="action">{{ gettext("Return to the management panel") }} <i class="material-icons right">exit_to_app</i></a>
    <div id="error"></div>
    <ul class="collapsible" id="l0" data-collapsible="accordion">
        {% for cat in menu.topLevelCategories %}
            <li>
                <div class="collapsible-header" onclick="loadData({{ cat.cid }}, {{ menu.mid }})"><a href="/restaurant/{{ rid }}/category/{{ cat.cid }}/edit"><i
                        class="material-icons">create</i></a>{{ cat.name }}</div>
                <div class="collapsible-body" id="c{{ cat.cid }}"></div>
            </li>
        {% endfor %}
    </ul>
    <!-- Modals Structure -->
    <div id="topLevelModal" class="modal">
        <div class="modal-content">
            <h4>Add a category</h4>
            <input id="topLevelCatName" name="topLevelCatName">
            <label for="topLevelCatName">Category Name</label>
        </div>
        <div class="modal-footer">
            <button class="modal-close waves-effect waves-green btn-flat" onclick="addCat(0, {{ menu.mid }})">Add
            </button>
        </div>
    </div>
{% endblock %}
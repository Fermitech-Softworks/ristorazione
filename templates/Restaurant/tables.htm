{% extends "stampo.htm" %}
{% block title %}{{ gettext("Tables") }}{% endblock %}
{% block extrahead %}

    <script src="//cdnjs.cloudflare.com/ajax/libs/socket.io/2.2.0/socket.io.js"
            integrity="sha256-yr4fRk/GU1ehYJPAs8P4JlTgu0Hdsp4ZKrx8bDEDC3I=" crossorigin="anonymous"></script>
    <script>
        let socket = io();
        $(document).ready(function () {
            $('.modal').modal();
            $('.collapsible').collapsible();
            socket.emit('connectPersonnel', rid ={{ rid }})
            M.toast({html: '{{ gettext("Connection with the server has been established.") }}'})
            //socket.on('connect', function () { Apparently chrome hates this.
            //    socket.emit('connectPersonnel', rid ={{ rid }})
            //    M.toast({html: '{{ gettext("Connection with the server has been established.") }}'})
            //});
            socket.on('ping', function () {
                console.log("ping")
            });
            socket.on('newOrder', function (json) {
                M.toast({html: '{{ gettext("A new order has been compiled.") }}'})
                let newTab = document.getElementById("new");
                console.log(json);
                for (const value of Object.keys(json)) {
                    let nextButton = document.createElement("a");
                    let nextIcon = document.createElement("i");
                    let row = document.createElement("tr");
                    row.id = "order-" + json[value]['data']['oid'];
                    newTab.appendChild(row);
                    let tableId = document.createElement("td");
                    tableId.innerText = json[value]['data']['tid'] + 1;
                    row.appendChild(tableId);
                    let plateName = document.createElement("td")
                    plateName.innerText = json[value]['data']['name'];
                    row.appendChild(plateName);
                    let qty = document.createElement("td")
                    qty.innerText = json[value]['data']['qty'];
                    row.appendChild(qty);
                    let action = document.createElement("td");
                    action.id = "action-" + json[value]['data']['oid'];
                    row.appendChild(action);
                    nextButton.href = "#!"
                    nextButton.setAttribute('onclick', 'change(' + json[value]['data']['oid'] + ', \'tbd\', \'new\')')
                    nextIcon.className = "material-icons";
                    nextIcon.textContent = "arrow_drop_down";
                    nextButton.appendChild(nextIcon);
                    action.appendChild(nextButton);
                }
            });
            socket.on('updateOrderStatus', function (json) {
                console.log("Ciao")
                let statusDict = {0: 'new', 1: 'tbd', 2: 'delivered'}
                let newTab = document.getElementById(statusDict[json['status']]);
                let oldTab = document.getElementById(statusDict[json['oldStatus']]);
                let oldRow = document.getElementById("order-" + json['oid']);
                let actionSpace = document.getElementById("action-" + json['oid']);
                let nextButton = document.createElement("a");
                let nextIcon = document.createElement("i");
                let backButton = document.createElement("a");
                let backIcon = document.createElement("i");
                nextButton.appendChild(nextIcon);
                backButton.appendChild(backIcon);
                actionSpace.innerHTML = "";
                if (json['status'] === 0) {
                    nextButton.href = "#!"
                    nextButton.setAttribute('onclick', 'change(' + json['oid'] + ', \'tbd\', \'new\')')
                    nextIcon.className = "material-icons";
                    nextIcon.textContent = "arrow_drop_down";
                    actionSpace.appendChild(nextButton);
                }
                if (json['status'] === 1) {
                    nextButton.href = "#!"
                    nextButton.setAttribute('onclick', 'change(' + json['oid'] + ', \'new\', \'tbd\')')
                    nextIcon.className = "material-icons";
                    nextIcon.textContent = "arrow_drop_up";
                    actionSpace.appendChild(nextButton);
                    backButton.href = "#!"
                    backButton.setAttribute('onclick', 'change(' + json['oid'] + ', \'delivered\', \'tbd\')')
                    backIcon.className = "material-icons";
                    backIcon.textContent = "arrow_drop_down";
                    actionSpace.appendChild(backButton);
                }
                if (json['status'] === 2) {
                    backButton.href = "#!"
                    backButton.setAttribute('onclick', 'change(' + json['oid'] + ', \'tbd\', \'delivered\')')
                    backIcon.className = "material-icons";
                    backIcon.textContent = "arrow_drop_up";
                    actionSpace.appendChild(backButton);
                }
                newTab.appendChild(oldRow);

            });
        });


        function getToken(tid, rid) {
            let xhr = new XMLHttpRequest();
            refDiv = document.getElementById("token" + tid)
            refDiv.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        response = JSON.parse(xhr.responseText);
                        refDiv.innerText = response['token']
                        refDiv.style = "font-family: consolas; font-size: 150%";
                    } else {
                        M.toast({html: '{{ gettext("Something went wrong while getting token data.") }}'})
                    }
                }
            });
            xhr.open("POST", "/table/" + tid + "/getToken", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "rid=" + rid
            xhr.send(parametri);
        }

        function getOrders(tid, rid) {
            let xhr = new XMLHttpRequest();
            refUl = document.getElementById("orders" + tid)
            refUl.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        let response = JSON.parse(xhr.responseText);
                        for (const o of response['orders']) {
                            let newLi = document.createElement("li")
                            newLi.className = "collection-item";
                            refUl.appendChild(newLi)
                            let internalDiv = document.createElement("div");
                            internalDiv.innerText = o['name'];
                            internalDiv.id = "order" + o['oid'];
                            internalDiv.innerText = internalDiv.innerText + " x" + o['qty'] + ", for each " + o['cost'] + "€.";
                            if (o['custom'] === "true") {
                                internalDiv.innerText = internalDiv.innerText + "{{ gettext("(custom)") }}";
                                let details = document.createElement("a");
                                details.className = "secondary-content";
                                details.href = "#"
                                details.text = "{{ gettext("Edit") }}"
                                details.setAttribute("onclick", "prepareModalSpecial(" + o['oid'] + "," + o['rid'] + ")")
                                internalDiv.appendChild(details)
                            }
                            newLi.appendChild(internalDiv);
                        }
                    } else {
                        M.toast({html: '{{ gettext("Something went wrong while getting orders.") }}'})
                    }
                }
            });
            xhr.open("POST", "/table/" + tid + "/getOrders", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "rid=" + rid
            xhr.send(parametri);
        }

        function prepareModal(tid, rid) {
            getToken(tid, rid)
            getOrders(tid, rid)
        }

        function closeTable(tid, rid) {
            let xhr = new XMLHttpRequest();
            refUl = document.getElementById("orders" + tid)
            refUl.innerHTML = ""
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        let response = JSON.parse(xhr.responseText);
                        console.log(response)
                        let mwindow = window.open("", "Recap", "width=800,height=600")
                        for (const o of response['orders']) {
                            mwindow.document.write("<p>" + o['name'] + " x" + o['qty'] + " , " + o['cost'] + "€" + "</p>")
                        }
                        mwindow.print()
                        prepareModal(tid, rid)
                    } else {
                        M.toast({html: '{{ gettext("Something went wrong while closing the table.") }}'})
                    }

                }
            });
            xhr.open("POST", "/table/" + tid + "/close", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "rid=" + rid
            xhr.send(parametri);
        }

        function change(oid, newLevel, oldLevel) {
            let statusDict = {'new': 0, 'tbd': 1, 'delivered': 2}
            let json = {'oid': oid, 'status': statusDict[newLevel], 'oldStatus': statusDict[oldLevel], 'rid': {{rid}}}
            socket.emit('updateOrderStatus', json)
        }

        function prepareModalSpecial(oid, rid) {
            let xhr = new XMLHttpRequest();
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        let response = JSON.parse(xhr.responseText);
                        console.log(response)
                        let refdiv = document.getElementById("order" + oid);
                        let maindiv;
                        try {
                            maindiv = document.getElementById("customDiv" + oid);
                            maindiv.innerText = ""
                        } catch (error) {
                            maindiv = document.createElement("div");
                            maindiv.id = "customDiv" + oid;
                            refdiv.appendChild(maindiv)
                        }
                        let text = document.createElement("textarea");
                        text.value = response['override']['desc']
                        text.id = "orderCustom" + oid;
                        maindiv.appendChild(text);
                        let cost = document.createElement("input");
                        cost.id = "orderCustomCost" + oid;
                        cost.value = response['override']['cost'];
                        let button = document.createElement("a");
                        button.href = "#"
                        button.setAttribute("onclick", "sendCustomData(" + oid + "," + rid + ")")
                        button.text = "{{ gettext("Update") }}"
                        button.className = "waves-effect waves-light btn"
                        maindiv.appendChild(cost)
                        maindiv.appendChild(button)
                    } else {
                        M.toast({html: '{{ gettext("Something went wrong while loading order details.") }}'})
                    }
                }
            });
            xhr.open("POST", "/order/" + oid + "/getPlate", true);
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "rid=" + rid
            xhr.send(parametri);
        }

        function sendCustomData(oid, rid) {
            let xhr = new XMLHttpRequest();
            xhr.addEventListener("readystatechange", function () {
                if (xhr.readyState === 4) {
                    if (xhr.status === 200) {
                        M.toast({html: '{{ gettext("Order update was successful.") }}'})
                    } else {
                        M.toast({html: '{{ gettext("Something went wrong while updating custom order.") }}'})
                    }
                }
            });
            let textBox = document.getElementById("orderCustom" + oid)
            let costBox = document.getElementById("orderCustomCost" + oid)
            xhr.open("POST", "/order/" + oid + "/setCustom", true)
            xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
            let parametri = "rid=" + rid + "&costOverride=" + costBox.value + "&special=" + textBox.value;
            xhr.send(parametri);
        }

    </script>
{% endblock %}
{% block content %}
    <h5>{{ gettext("This is the table and order management page.") }}</h5>
    <div class="row">
        <div class="col s12 m6">
            <ul class="collection with-header">
                <li class="collection-header"><h4>Tables</h4></li>
                {% for table in tables %}
                    <li class="collection-item">
                        <div>{{ gettext("Table") }} {{ table.tid + 1 }}
                            <a href="" data-target="modal{{ table.tid }}" class="secondary-content modal-trigger"
                               onclick="prepareModal({{ table.tid }}, {{ table.restaurantId }})"><i
                                    class="material-icons">search</i>
                            </a>
                        </div>
                        <div id="modal{{ table.tid }}" class="modal">
                            <div class="modal-content">
                                <h4>{{ gettext("Table number") }} {{ table.tid + 1 }}</h4>
                                <div class="row">
                                    <div class="col s12 m6">
                                        <p>{{ gettext("The current token is ") }}</p>
                                        <div id="token{{ table.tid }}"></div>
                                        <a href="#" onclick="closeTable({{ table.tid }}, {{ table.restaurantId }})"
                                           class="waves-effect waves-light btn">Sign-off table</a>
                                    </div>
                                    <div class="col s12 m6">
                                        <p>{{ gettext("List of orders. ") }}<a href="#"
                                                                               onclick="getOrders({{ table.tid }}, {{ table.restaurantId }})">{{ gettext("Click here to refresh.") }}</a>
                                        </p>
                                        <ul class="collection" id="orders{{ table.tid }}">
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <a href="#!"
                                   class="modal-close waves-effect waves-green btn-flat">{{ gettext("Close") }}</a>
                            </div>
                        </div>
                        <div id="modal{{ table.tid }}" class="modal">
                            <div class="modal-content">
                                <h4>{{ gettext("Table number") }} {{ table.tid + 1 }}</h4>
                                <div class="row">
                                    <div class="col s12 m6">
                                        <p>{{ gettext("The current token is ") }}</p>
                                        <div id="token{{ table.tid }}"></div>
                                        <a href="#" onclick="closeTable({{ table.tid }}, {{ table.restaurantId }})"
                                           class="waves-effect waves-light btn">Sign-off table</a>
                                    </div>
                                    <div class="col s12 m6">
                                        <p>{{ gettext("List of orders. ") }}<a href="#"
                                                                               onclick="getOrders({{ table.tid }}, {{ table.restaurantId }})">{{ gettext("Click here to refresh.") }}</a>
                                        </p>
                                        <ul class="collection" id="orders{{ table.tid }}">
                                        </ul>
                                    </div>
                                </div>
                            </div>
                            <div class="modal-footer">
                                <a href="#!"
                                   class="modal-close waves-effect waves-green btn-flat">{{ gettext("Close") }}</a>
                            </div>
                        </div>
                    </li>
                {% endfor %}
            </ul>
        </div>
        <div class="col s12 m6">
            <ul class="collapsible">
                <li>
                    <div class="collapsible-header">{{ gettext("New Orders") }}</div>
                    <div class="collapsible-body">
                        <table>
                            <thead>
                            <tr>
                                <th>{{ gettext('Table') }}</th>
                                <th>{{ gettext('Plate') }}</th>
                                <th>{{ gettext('Qty') }}</th>
                                <th>{{ gettext('Actions') }}</th>
                            </tr>
                            </thead>
                            <tbody id="new">
                            {% for order in op %}
                                <tr id="order-{{ order.oid }}">
                                    <td>{{ order.tableId + 1 }}</td>
                                    <td>{{ order.plate.name }} {% if order.specialReq is not none %}
                                        {{ gettext("(custom)") }} {% endif %}</td>
                                    <td>{{ order.quantity }}</td>
                                    <td id="action-{{ order.oid }}"><a href="#!"
                                                                       onclick="change({{ order.oid }}, 'tbd', 'new')"><i
                                            class="material-icons">arrow_drop_down</i></a>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </li>
                <li>
                    <div class="collapsible-header">{{ gettext("Waiting for delivery") }}</div>
                    <div class="collapsible-body">
                        <table>
                            <thead>
                            <tr>
                                <th>{{ gettext('Table') }}</th>
                                <th>{{ gettext('Plate') }}</th>
                                <th>{{ gettext('Qty') }}</th>
                                <th>{{ gettext('Actions') }}</th>
                            </tr>
                            </thead>
                            <tbody id="tbd">
                            {% for order in ot %}
                                <tr id="order-{{ order.oid }}">
                                    <td>{{ order.tableId + 1 }}</td>
                                    <td>{{ order.plate.name }} {% if order.specialReq is not none %}
                                        {{ gettext("(custom)") }} {% endif %}</td>
                                    <td>{{ order.quantity }}</td>
                                    <td id="action-{{ order.oid }}"><a href="#!"
                                                                       onclick="change({{ order.oid }}, 'delivered', 'tbd')"><i
                                            class="material-icons">arrow_drop_down</i></a>
                                        <a href="#!" onclick="change({{ order.oid }}, 'new', 'tbd')"><i
                                                class="material-icons">arrow_drop_up</i></a>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </li>
                <li>
                    <div class="collapsible-header">{{ gettext("Delivered") }}</div>
                    <div class="collapsible-body">
                        <table>
                            <thead>
                            <tr>
                                <th>{{ gettext('Table') }}</th>
                                <th>{{ gettext('Plate') }}</th>
                                <th>{{ gettext('Qty') }}</th>
                                <th>{{ gettext('Actions') }}</th>
                            </tr>
                            </thead>
                            <tbody id="delivered">
                            {% for order in oc %}
                                <tr id="order-{{ order.oid }}">
                                    <td>{{ order.tableId + 1 }}</td>
                                    <td>{{ order.plate.name }} {% if order.specialReq is not none %}
                                        {{ gettext("(custom)") }} {% endif %}</td>
                                    <td>{{ order.quantity }}</td>
                                    <td id="action-{{ order.oid }}"><a href="#!"
                                                                       onclick="change({{ order.oid }}, 'tbd', 'delivered')"><i
                                            class="material-icons">arrow_drop_up</i></a>
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                    </div>
                </li>
            </ul>
        </div>
    </div>
{% endblock %}